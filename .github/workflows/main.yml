name: Build & upload to Firebase App Distribution
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "19"

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo "Decoding google-services.json..."
          echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
          if [ ! -f "android/app/google-services.json" ]; then
            echo "Error: google-services.json was not created"
            exit 1
          fi

      - name: Decode firebase_options.dart
        env:
          firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
        run: |
          echo "Decoding firebase_options.dart..."
          echo "$firebase_options_dart" > lib/firebase_options.dart
          if [ ! -f "lib/firebase_options.dart" ]; then
            echo "Error: firebase_options.dart was not created"
            exit 1
          fi

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: |
          echo "Installing Flutter dependencies..."
          flutter pub get

      - name: Build APK
        run: |
          echo "Building APK..."
          flutter build apk --release
          ls -la build/app/outputs/flutter-apk/

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Upload to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{secrets.TOKEN}}
          FIREBASE_APP_ID: ${{secrets.APPID}}
        run: |
          echo "Uploading to Firebase App Distribution..."
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "Error: APK file not found at expected location"
            ls -la build/app/outputs/flutter-apk/app-release.apk
            exit 1
          fi
          
          firebase appdistribution:distribute "build/app/outputs/flutter-apk/app-release.apk" \
            --app "$FIREBASE_APP_ID" \
            --token "$FIREBASE_TOKEN" \
            --groups "pre-tester" \
            --release-notes "Build from GitHub Actions"